{"version":3,"sources":["Components/Header.js","Components/Result.js","Components/MovieInfo.js","Components/Footer.js","Components/Loader.js","App.js","reportWebVitals.js","index.js"],"names":["Header","id","Result","string","movie","useContext","AppContext","setSelectedMovie","setLoading","navigate","useNavigate","className","src","image","alt","title","length","slice","onClick","Axios","get","then","response","data","MovieInfo","selectedMovie","to","type","runtimeMins","year","plot","genres","directors","actorList","map","actor","name","imDbRating","Footer","href","target","rel","Loader","createContext","App","useState","query","setQuery","error","setError","results","setResults","loading","basename","Provider","value","path","exact","element","placeholder","onChange","e","setTimeout","catch","err","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b1b563c.chunk.js","sourcesContent":["import './Header.css';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header id='header' >\r\n\t\t\t<h1>Movio</h1>\r\n\t\t\t<h4>Get info about your favorite movies and series</h4>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header","import { useContext } from 'react';\r\nimport { AppContext } from '../App';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport './Result.css';\r\nconst Result = ( { movie } ) => {\r\n\r\n\tconst { setSelectedMovie, setLoading } = useContext(AppContext);\r\n\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst onclick =() => {\r\n\t\tsetLoading(true);\r\n\t\tAxios.get(`https://imdb-api.com/en/API/Title/k_m9o0n90c/${movie.id}`).then(response => {\r\n\t\t\tsetSelectedMovie(response.data);\r\n\t\t\tsetLoading(false);\r\n\t\t\tnavigate(`/searchid=:${movie.id}`);\r\n\t\t});\t\t\r\n\t}\r\n\r\n\tconst shorten =(string) => {\r\n\t\tif (string.length > 20) {\r\n\t\t\treturn string.slice(0, 21) + '...';\r\n\t\t}else {\r\n\t\t\treturn string;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className='result' >\r\n\t\t\t<img src={ movie.image } alt=\"movie-poster\" className=\"movie-image\" />\r\n\t\t\t<h3 className=\"movie-title\">{ shorten(movie.title) }</h3>\r\n\t\t\t<button id=\"more-btn\" onClick={onclick} >See More</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Result","import { useContext } from 'react';\r\nimport { AppContext } from '../App';\r\nimport { Link } from 'react-router-dom';\r\nimport './MovieInfo.css';\r\n\r\nconst MovieInfo = () => {\r\n\r\n\tconst { selectedMovie } = useContext(AppContext);\r\n\r\n\treturn (\r\n\t\t<div className='movie-wrapper' >\r\n\t\t\t<Link className='home-link' to='/' >Back to Home Page</Link>\r\n\t\t\t{ selectedMovie && (\r\n\t\t\t<div className='movie'>\t\r\n\t\t\t\t<img src={selectedMovie.image} alt=\"movie-poster\" className='movie-poster' />\r\n\t\t\t\t<div className=\"movie-info\">\r\n\t\t\t\t\t<h1 className=\"movie-name\"> { selectedMovie.title } </h1>\r\n\t\t\t\t\t<h5 className=\"movie-type\"> { selectedMovie.type } { selectedMovie.runtimeMins && ` - ${ selectedMovie.runtimeMins } mins` }  </h5>\r\n\t\t\t\t\t<h4 className=\"movie-year\"> { selectedMovie.year } </h4>\r\n\t\t\t\t\t<p className=\"movie-plot\"> { selectedMovie.plot } </p>\r\n\t\t\t\t\t<p className=\"movie-genre\"> <strong>Genre: </strong> { selectedMovie.genres } </p>\r\n\t\t\t\t\t<p className=\"movie-director\"> <strong>Director(s): </strong> { selectedMovie.directors } </p>\r\n\t\t\t\t\t<p className=\"movie-actors\"> <strong>Actors: </strong> { selectedMovie.actorList.slice(0, 8).map(actor => actor.name + ', ' ) }  </p>\r\n\t\t\t\t\t<p className=\"movie-rating\"> <strong>imDb Rating: </strong> { selectedMovie.imDbRating } </p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MovieInfo","import './Footer.css';\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<footer id='footer' >\r\n\t\t\t<p> &copy; Movio 2021. All Rights Reserved</p>\r\n\t\t\t<p>Powered by <a href=\"https://imdb-api.com\" target='_blank' rel=\"noreferrer\" >IMDB API</a> </p>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\nexport default Footer","import './Loader.css';\r\n\r\nconst Loader = () => {\r\n\treturn (\r\n\t\t<div id='loader' >\r\n\t\t\t<span></span>\r\n\t\t\t<span></span>\r\n\t\t\t<span></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Loader","import { HashRouter, BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Axios from 'axios';\nimport { useState, createContext } from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport Result from './Components/Result';\nimport MovieInfo from './Components/MovieInfo';\nimport Footer from './Components/Footer';\nimport Loader from './Components/Loader';\n\nexport  const AppContext = createContext(null);\n\n\nfunction App() {\n\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n  const [results, setResults] = useState([ ]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const search = () => {\n    if (query==='') {\n      setError(true);\n      setTimeout( ()=> setError(false), 2000 );\n    }else {\n      setError(false);\n      setLoading(true);\n      Axios.get(`https://imdb-api.com/en/API/Search/k_m9o0n90c/${query}`).then(response => {\n        setResults(response.data.results);\n        setLoading(false);\n      }).catch(err => console.log('error',err));\n    }\n  }\n\n  return (\n    <HashRouter basename='/' >\n      <AppContext.Provider value={{ selectedMovie, setSelectedMovie, setLoading }} >\n        <div className=\"app\">\n          <Header/>\n          <div className=\"wrapper\">\n            { loading && <Loader /> }\n            <Routes>          \n              <Route path='/' exact element={ (\n                <>\n                  <div className=\"query-area\">\n                    <div className=\"searchbox\">\n                      <input type=\"text\" placeholder='Search movie...' id='search' onChange={ (e)=> setQuery(e.target.value) } />\n                      <button id='search-btn' onClick={ search } >Search</button>\n                    </div>\n                    { error && <p className=\"msg\">Please enter a search term</p> }\n                  </div>\n                  \n                  <div className=\"results\">\n                    { results.map(movie => <Result key={ movie.id } movie={ movie } /> ) }\n                  </div>                \n                </>\n                ) }  />\n              <Route path='/searchid=:movieid' element={ <MovieInfo/> } />\n           </Routes>\n          </div>\n          <Footer/>\n        </div>\n      </AppContext.Provider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}